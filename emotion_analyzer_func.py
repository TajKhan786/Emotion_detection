#!/usr/bin/env python
# coding: utf-8

# In[4]:


import pickle
import pandas as pd
import nltk
import re
from nltk.corpus import stopwords
nltk.download('stopwords')
nltk.download('wordnet')
from nltk.stem.porter import PorterStemmer
from nltk.stem import WordNetLemmatizer 
lemmatizer = WordNetLemmatizer() 


# In[1]:


stop_freq_rare_words=['i',
 'me',
 'my',
 'myself',
 'we',
 'our',
 'ours',
 'ourselves',
 'you',
 "you're",
 "you've",
 "you'll",
 "you'd",
 'your',
 'yours',
 'yourself',
 'yourselves',
 'he',
 'him',
 'his',
 'himself',
 'she',
 "she's",
 'her',
 'hers',
 'herself',
 'it',
 "it's",
 'its',
 'itself',
 'they',
 'them',
 'their',
 'theirs',
 'themselves',
 'what',
 'which',
 'who',
 'whom',
 'this',
 'that',
 "that'll",
 'these',
 'those',
 'am',
 'is',
 'are',
 'was',
 'were',
 'be',
 'been',
 'being',
 'have',
 'has',
 'had',
 'having',
 'do',
 'does',
 'did',
 'doing',
 'a',
 'an',
 'the',
 'and',
 'but',
 'if',
 'or',
 'because',
 'as',
 'until',
 'while',
 'of',
 'at',
 'by',
 'for',
 'with',
 'about',
 'against',
 'between',
 'into',
 'through',
 'during',
 'before',
 'after',
 'above',
 'below',
 'to',
 'from',
 'up',
 'down',
 'in',
 'out',
 'on',
 'off',
 'over',
 'under',
 'again',
 'further',
 'then',
 'once',
 'here',
 'there',
 'when',
 'where',
 'why',
 'how',
 'all',
 'any',
 'both',
 'each',
 'few',
 'more',
 'most',
 'other',
 'some',
 'such',
 'no',
 'nor',
 'not',
 'only',
 'own',
 'same',
 'so',
 'than',
 'too',
 'very',
 's',
 't',
 'can',
 'will',
 'just',
 'don',
 "don't",
 'should',
 "should've",
 'now',
 'd',
 'll',
 'm',
 'o',
 're',
 've',
 'y',
 'ain',
 'aren',
 "aren't",
 'couldn',
 "couldn't",
 'didn',
 "didn't",
 'doesn',
 "doesn't",
 'hadn',
 "hadn't",
 'hasn',
 "hasn't",
 'haven',
 "haven't",
 'isn',
 "isn't",
 'ma',
 'mightn',
 "mightn't",
 'mustn',
 "mustn't",
 'needn',
 "needn't",
 'shan',
 "shan't",
 'shouldn',
 "shouldn't",
 'wasn',
 "wasn't",
 'weren',
 "weren't",
 'won',
 "won't",
 'wouldn',
 "wouldn't",
 'its',
 'arent',
 'couldnt',
 'didnt',
 'doesnt',
 'hadnt',
 'hasnt',
 'havent',
 'isnt',
 'mightnt',
 'mustnt',
 'neednt',
 'shant',
 'shouldnt',
 'wasnt',
 'werent',
 'wont',
 'wouldnt',
'could',
 'day',
 'even',
 'feel',
 'feeling',
 'get',
 'good',
 'im',
 'know',
 'like',
 'little',
 'much',
 'one',
 'people',
 'really',
 'think',
 'time',
 'want',
 'would',
 'â',
'1564',
 '1977',
 '1979',
 '1986',
 '1999',
 '19th',
 '1bs',
 '2a',
 '2c',
 '48',
 '49er',
 '512',
 '5b',
 '800',
 'abjectly',
 'absurdly',
 'abut',
 'accord',
 'accouting',
 'acute',
 'adheres',
 'admiral',
 'advantages',
 'aires',
 'alcool',
 'aldridge',
 'alecia',
 'alleging',
 'almanach',
 'amelia',
 'amends',
 'anc',
 'ans',
 'apoplectic',
 'appeard',
 'appliances',
 'approve',
 'armoury',
 'arnhem',
 'arpeggios',
 'asap',
 'assassination',
 'atlas',
 'atrocity',
 'attained',
 'aviator',
 'avoids',
 'baggage',
 'balcony',
 'balista',
 'bandaged',
 'bargaining',
 'bark',
 'barked',
 'barley',
 'basses',
 'bates',
 'baving',
 'bbs',
 'bennett',
 'bernard',
 'bildt',
 'blackboard',
 'blyton',
 'boal',
 'boast',
 'bowled',
 'brabham',
 'breach',
 'bubbled',
 'buenos',
 'burglary',
 'burial',
 'burun',
 'businessman',
 'caesarean',
 'calligraphy',
 'cannel',
 'carlie',
 'carrier',
 'casey',
 'catalog',
 'cecilia',
 'certifications',
 'chancellor',
 'channels',
 'characterize',
 'charlotte',
 'chico',
 'chilly',
 'choral',
 'clashfern',
 'commemorations',
 'companions',
 'compress',
 'comrades',
 'concert5',
 'contents',
 'contraceptives',
 'convoked',
 'cooke',
 'cooperate',
 'copland',
 'corruption',
 'coziness',
 'crocheting',
 'crumpled',
 'cueing',
 'curt',
 'dame',
 'dannielsson',
 'dedication',
 'deficiency',
 'delaying',
 'delegates',
 'deliberate',
 'demanded',
 'denning',
 'dented',
 'deputies',
 'deriving',
 'designs',
 'dido',
 'diificult',
 'diminished',
 'disadvantageous',
 'disadvantages',
 'disapproval',
 'disciplined',
 'disclosed',
 'disconsolation',
 'discontinue',
 'disgrace',
 'disguise',
 'dispenses',
 'dissolution',
 'documentay',
 'doings',
 'doleful',
 'domination',
 'dormer',
 'drafted',
 'drains',
 'draught',
 'drin',
 'duan',
 'duplication',
 'dwyer',
 'easing',
 'edwards',
 'elephant',
 'ere',
 'evacuate',
 'exaltation',
 'expectancy',
 'explosion',
 'expulsion',
 'extension',
 'extracurricular',
 'faintly',
 'fajita',
 'fanfare',
 'fase',
 'favours',
 'feathers',
 'federation',
 'fencing',
 'fined',
 'fingered',
 'finisher',
 'fittest',
 'fizzled',
 'flattens',
 'flaubert',
 'flicker',
 'flier',
 'foh',
 'fondness',
 'formerly',
 'formi',
 'forrest',
 'foursome',
 'francs',
 'frat',
 'fretting',
 'fried',
 'frump',
 'gagged',
 'gains',
 'girona',
 'globe',
 'glossary',
 'goalkeeper',
 'gothic',
 'gracefully',
 'graduatiion',
 'graves',
 'grinning',
 'guatemala',
 'guided',
 'gunslinger',
 'hale',
 'hallway',
 'halted',
 'hamburg',
 'hauling',
 'hauser',
 'heartily',
 'hewson',
 'highbury',
 'hindrances',
 'honduran',
 'honduras',
 'honeymoon',
 'hoops',
 'horrendous',
 'horseback',
 'hrt',
 'hunter',
 'hurriedly',
 'hygienic',
 'hyperactive',
 'ignores',
 'imagines',
 'impertinence',
 'imploded',
 'incense',
 'indenbaum',
 'indentures',
 'indoors',
 'inefficiency',
 'infinite',
 'informative',
 'inspect',
 'instace',
 'institutions',
 'interferred',
 'internalised',
 'intolerance',
 'invigorate',
 'issued',
 'jaguar',
 'johns',
 'judgements',
 'jumbe',
 'k100',
 'k30',
 'kabwe',
 'kittens',
 'landslides',
 'lanscape',
 'laryngeal',
 'lawson',
 'letterbox',
 'levelled',
 'liberties',
 'litre',
 'liverpool',
 'livingston',
 'loading',
 'lottery',
 'lovesickness',
 'lumbered',
 'lyn',
 'lynching',
 'mackay',
 'macon',
 'malevolent',
 'maneuver',
 'manipulation',
 'marguerite',
 'materialize',
 'materializing',
 'mauritania',
 'mchesi',
 'melndez',
 'menstration',
 'messier',
 'methodic',
 'mick',
 'minorca',
 'mit',
 'mockery',
 'monopolise',
 'monotony',
 'morrison',
 'mosquitoes',
 'mot',
 'myths',
 'nearest',
 'nh',
 'noncommercial',
 'nonsens',
 'nothingness',
 'obviusly',
 'occurence',
 'ohhhh',
 'operator',
 'oppression',
 'orally',
 'outstrips',
 'overflowed',
 'overheard',
 'overtaking',
 'oviedo',
 'pa',
 'packets',
 'paedophiliac',
 'painfully',
 'painkillers',
 'pallid',
 'palpable',
 'panama',
 'passsed',
 'payment',
 'pedal',
 'penguin',
 'penultimate',
 'persecution',
 'perspiration',
 'perversely',
 'piggy',
 'pillars',
 'pingpong',
 'pithched',
 'pitman',
 'plummer',
 'plychology',
 'policies',
 'popularity',
 'portrait',
 'portraying',
 'postman',
 'prefecture',
 'prejudices',
 'prescriptions',
 'professions',
 'programmers',
 'prompted',
 'prosecutors',
 'psychical',
 'publican',
 'pullovers',
 'punish',
 'pyke',
 'queue',
 'queuing',
 'ralemberg',
 'raquel',
 'rebate',
 'rebel',
 'rebuilt',
 'recommendation',
 'reconsider',
 'recreating',
 'recurrent',
 'refereeing',
 'refilling',
 'rejoicing',
 'relayed',
 'reminiscent',
 'reminiscing',
 'rents',
 'repaired',
 'repel',
 'repentance',
 'reschedule',
 'rescued',
 'resolutely',
 'retreating',
 'reversed',
 'ridged',
 'robbery',
 'robe',
 'robson',
 'rooftop',
 'rosebery',
 'rosenbloom',
 'rosie',
 'rover',
 'ruffians',
 'ruptured',
 'sarajevo',
 'scleral',
 'sections',
 'seing',
 'seismic',
 'senate',
 'serbs',
 'sergeant',
 'seriors',
 'shadowed',
 'shaked',
 'sharpness',
 'shelley',
 'shirer',
 'shrunk',
 'sighing',
 'sixteenth',
 'skydide',
 'slattern',
 'slighty',
 'slimiy',
 'slurs',
 'soemone',
 'softened',
 'solist',
 'soporification',
 'sotheby',
 'spat',
 'specifying',
 'squaddies',
 'squadron',
 'sterilized',
 'stretcher',
 'strived',
 'striven',
 'stronghold',
 'stubbled',
 'sty',
 'subordinate',
 'succession',
 'summoned',
 'suzannah',
 'switchboard',
 'switching',
 'swooped',
 'sybil',
 'taciturnity',
 'tackels',
 'tage',
 'taipei',
 'tanzania',
 'tapering',
 'tara',
 'taxing',
 'telegrams',
 'tentative',
 'tertiary',
 'thay',
 'theoretical',
 'therein',
 'thorns',
 'thourgh',
 'threefold',
 'titan',
 'toothbrush',
 'toppling',
 'towelling',
 'trailing',
 'trance',
 'tranquilliser',
 'transiently',
 'travels',
 'traying',
 'trek',
 'triangular',
 'tributes',
 'tricameral',
 'trumpeted',
 'tsu',
 'tutors',
 'tyrol',
 'ummmph',
 'unaccustomed',
 'unbent',
 'unconditionally',
 'uncontrollably',
 'undamaged',
 'undefeated',
 'underestimate',
 'underfoot',
 'underscore',
 'undescribable',
 'unequivocally',
 'unfolds',
 'unimpartiality',
 'unrestrained',
 'untouchable',
 'vacate',
 'valds',
 'vass',
 'ventilates',
 'vicky',
 'vigour',
 'vincent',
 'violins',
 'volcanoes',
 'warrington',
 'wearily',
 'wears',
 'welshpool',
 'wheels',
 'wikstrã',
 'winnings',
 'wok',
 'wrinkled',
 'zealous',
 'zhang',
 'zhongshan']


# In[2]:


def emotion_detect_function(text):
    #test_data='i am very much angry today taj'
    test_data = str.lower(text)
    print(test_data)
    test_data_1 =re.sub('[^a-zA-Z]', ' ', test_data)
    #print(test_data_1)
    def stop_freq_rare_words_f(text):
        return " ".join([word for word in str(text).split() if word not in stop_freq_rare_words])
    test_data_2=stop_freq_rare_words_f(test_data_1)
    def lemmatize_words(text):
        return " ".join([lemmatizer.lemmatize(word) for word in text.split()])
    test_data_2=lemmatize_words(test_data_2)
    #print(test_data_2)
    #def stem_words(text):
        #return " ".join([stemmer.stem(word) for word in text.split()])
    #test_data_2=stem_words(test_data_2)
    test_data_2=pd.DataFrame([test_data_2])
    #count_vect = CountVectorizer(analyzer='word')
    filename = 'count_vect'
    count_vect=pickle.load(open(filename, 'rb'))
    test_data_count=count_vect.transform(test_data_2[0])
    # load the model from disk
    filename = 'nb_lemma_model.sav'
    loaded_model = pickle.load(open(filename, 'rb'))
    result = loaded_model.predict(test_data_count)
    value = list(loaded_model.predict_proba(test_data_count).max(axis=1))
    key = "Anger" if result==0 else "Joy" if result==1 else "Sadness"
    return key,value

